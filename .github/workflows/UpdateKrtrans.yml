name: Update Kr Translation

on:
  schedule:
    - cron: '0 15 * * 6'  # 매주 토요일 UTC 15:00 (한국 시간 일요일 자정에 실행)
  workflow_dispatch:  # 수동 실행을 위한 옵션

jobs:
  update_files:
    runs-on: ubuntu-latest

    steps:
      # 현재 리포지토리 체크아웃
      - name: Checkout this repository
        uses: actions/checkout@v3

      # GITHUB_TOKEN 설정
      - name: Set GitHub Token environment variable
        run: echo "GITHUB_TOKEN=${{ secrets.G_TOKEN }}" >> $GITHUB_ENV

      # 최신 태그 정보 가져오기
      - name: Get latest tag from source repository
        id: get_latest_tag
        run: |
          LATEST_TAG=$(curl -s -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/uotalkie/dol-kr/tags | jq -r '.[0].name')
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV

      # 현재 리포지토리에서 scripts 폴더 내 KrVersionChecker.txt에 저장된 버전 가져오기
      - name: Get current version from this repository
        id: get_current_version
        run: |
          if [ -f scripts/KrVersionChecker.txt ]; then
            CURRENT_VERSION=$(cat scripts/KrVersionChecker.txt)
          else
            CURRENT_VERSION="none"
          fi
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV

      # 태그 비교 및 복사 여부 확인
      - name: Compare versions
        id: compare_versions
        run: |
          if [ "$LATEST_TAG" != "$CURRENT_VERSION" ]; then
            echo "New version found: $LATEST_TAG"
            echo "COPY_NEEDED=true" >> $GITHUB_ENV
          else
            echo "Already up to date"
            echo "COPY_NEEDED=false" >> $GITHUB_ENV
          fi

      # 트리 비교 후 SHA가 다른 파일들에 대해 diff를 확인하는 방식
      - name: Get list of changed files
        if: env.COPY_NEEDED == 'true'
        run: |
          BASE_TREE_SHA=$(curl -s -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/uotalkie/dol-kr/git/refs/tags/$CURRENT_VERSION | jq -r '.object.sha')
          HEAD_TREE_SHA=$(curl -s -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/uotalkie/dol-kr/git/refs/tags/$LATEST_TAG | jq -r '.object.sha')

          BASE_COMMIT_SHA=$(curl -s -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/uotalkie/dol-kr/git/commits/$BASE_TREE_SHA | jq -r '.tree.sha')
          HEAD_COMMIT_SHA=$(curl -s -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/uotalkie/dol-kr/git/commits/$HEAD_TREE_SHA | jq -r '.tree.sha')

          BASE_TREE=$(curl -s -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/uotalkie/dol-kr/git/trees/$BASE_COMMIT_SHA?recursive=1 | jq -r '.tree[] | .path + " " + .sha')
          HEAD_TREE=$(curl -s -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/uotalkie/dol-kr/git/trees/$HEAD_COMMIT_SHA?recursive=1 | jq -r '.tree[] | .path + " " + .sha')

          echo "$BASE_TREE" > base_tree.txt
          echo "$HEAD_TREE" > head_tree.txt

          CHANGED_FILES=$(comm -3 <(sort base_tree.txt) <(sort head_tree.txt) | awk '{print $1}')

          echo "$CHANGED_FILES" > scripts/KrChangedFiles.txt
          echo "CHANGED_FILES<<EOF" >> $GITHUB_ENV
          echo "$CHANGED_FILES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV


      # 변경된 파일을 복사 (경로 유지 및 덮어쓰기)
      - name: Copy changed files from source repository
        if: env.COPY_NEEDED == 'true'
        run: |
          mkdir -p KrTrans
          while IFS= read -r file; do
            if [ -n "$file" ]; then
              dir=$(dirname "./KrTrans/$file")
              mkdir -p "$dir"
              echo "Copying file: $file"
              URL="https://raw.githubusercontent.com/uotalkie/dol-kr/$LATEST_TAG/$file"
              echo "URL: $URL"
              curl -L -H "Authorization: token $GITHUB_TOKEN" -o "./KrTrans/$file" "$URL" || echo "Failed to download: $file"
            fi
          done <<< "$CHANGED_FILES"

      # 최신 태그를 scripts 폴더 내 KrVersionChecker.txt에 기록
      - name: Update version in scripts/KrVersionChecker.txt
        if: env.COPY_NEEDED == 'true'
        run: |
          echo "$LATEST_TAG" > scripts/KrVersionChecker.txt

      # 변경된 파일들 커밋 및 푸시
      - name: Commit and push changes
        if: env.COPY_NEEDED == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions"
          git add .
          git commit -m "$LATEST_TAG" || echo "Nothing to commit"
          git push